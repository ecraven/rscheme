{RefEntry}
{RefNameDiv}
  {RefName}receive-message!{/RefName}
  {RefPurpose}Receive a message from a mailbox.{/RefPurpose}
  {RefClass role="Type"}function{/RefClass}
{/RefNameDiv}
{RefSynopsisDiv}
{FuncSynopsis Role="Scheme"}
{FuncPrototype}
{FuncDef}{Function/receive-message!/{/FuncDef}
{ParamDef role="arguments"}<!-- spaces are significant -->
 {Parameter/mbox/{/ParamDef}{ParamDef role="returns"}
{Parameter}item{/Parameter}{/ParamDef}{/FuncPrototype}
{/FuncSynopsis}
{RefSect2}
  {Title}Arguments{/Title}
  {VariableList}
   {VarListEntry}
    {Term}mbox{/Term}
    {ListItem}{para}
An instance of {ClassName/<mailbox>/{/para}
    {/ListItem}
   {/VarListEntry}
  {/VariableList}
{/RefSect2}
{RefSect2}
  {Title}Return Values{/Title}
  {VariableList}
   {VarListEntry}
    {Term}item{/Term}
    {ListItem}{para}
An instance of {ClassName/<object>/{/para}
    {/ListItem}
   {/VarListEntry}
  {/VariableList}
{/RefSect2}
{/RefSynopsisDiv}
{RefSect1}
  {Title}Description{/Title}
{para}
This procedure extracts the next message from {Parameter}mbox{/Parameter}.  If nothing
is available, the thread blocks until a corresponding message is
enqueued.  Multiple waiters on a single mailbox are queued in FCFS order.{/para}
{/RefSect1}
{/RefEntry}
