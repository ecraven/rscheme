{RefEntry}
{RefNameDiv}
  {RefName}semaphore-wait{/RefName}
  {RefPurpose}Decrement semaphore count, blocking if negative.{/RefPurpose}
  {RefClass role="Type"}function{/RefClass}
{/RefNameDiv}
{RefSynopsisDiv}
{FuncSynopsis Role="Scheme"}
{FuncPrototype}
{FuncDef}{Function/semaphore-wait/{/FuncDef}
{ParamDef role="arguments"}<!-- spaces are significant -->
 {Parameter/sem/{/ParamDef}{ParamDef role="returns"}
{/ParamDef}{/FuncPrototype}
{/FuncSynopsis}
{RefSect2}
  {Title}Arguments{/Title}
  {VariableList}
   {VarListEntry}
    {Term}sem{/Term}
    {ListItem}{para}
An instance of {ClassName/<semaphore>/{/para}
    {/ListItem}
   {/VarListEntry}
  {/VariableList}
{/RefSect2}
{/RefSynopsisDiv}
{RefSect1}
  {Title}Description{/Title}
{para}
Decrements the semaphore counter, blocking the current thread
if the count becomes negative.{/para}
{/RefSect1}
{/RefEntry}
